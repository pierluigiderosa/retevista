# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2020-01-20 17:17
from __future__ import unicode_literals

import dateutil.utils
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dash_aziende', '0001_initial'),
        ('income', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='appezzamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.TextField(verbose_name='nome appezzamento')),
                ('conduttore', models.TextField()),
                ('proprietario', models.TextField()),
                ('localita', models.TextField(verbose_name='Localit\xe0')),
                ('soglia', models.FloatField(default=5.0)),
                ('cap_di_campo', models.FloatField(help_text='celle C16', verbose_name='capacit\xe0 di campo')),
                ('punto_appassimento', models.FloatField(help_text='celle C17', verbose_name='punto di appassimento')),
                ('perc_sabbia', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='percentuale sabbia')),
                ('perc_argilla', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='percentuale argilla')),
                ('perc_limo', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='percentuale limo')),
                ('den_app', models.FloatField(verbose_name='densit\xe0 apparente del terreno')),
                ('cap_idrica', models.FloatField(help_text='celle C18 e C3', verbose_name='capacit\xe0 idrica massima')),
                ('ris_fac_util', models.FloatField(help_text='celle C4', verbose_name='riserva facilmente utilizzabile')),
                ('vol_irriguo', models.FloatField(verbose_name='dose intervento irriguo')),
                ('perc_riserva_util', models.PositiveIntegerField(help_text='celle C5', verbose_name='percentuale riserva facilmente utilizzabile')),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'verbose_name': 'Appezzamento old',
                'verbose_name_plural': 'Appezzamenti old',
            },
        ),
        migrations.CreateModel(
            name='appezzamentoCampo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soglia', models.FloatField(default=5.0, help_text='espresso in mm', verbose_name='tolleranza pioggia utile')),
                ('cap_di_campo', models.FloatField(default=0, help_text='espresso in g/100g <br>celle C16', verbose_name='capacit\xe0 di campo')),
                ('punto_appassimento', models.FloatField(default=0, help_text='espresso in g/100g <br>celle C17', verbose_name='punto di appassimento')),
                ('den_app', models.FloatField(default=0.0, help_text='espresso in g/cm<sup>3</sup>', verbose_name='densit\xe0 apparente del terreno')),
                ('cap_idrica', models.FloatField(default=0, help_text='celle C18 e C3', verbose_name='capacit\xe0 idrica massima')),
                ('ris_fac_util', models.FloatField(default=0.0, help_text='espresso in mm<br>celle C4', verbose_name='riserva facilmente utilizzabile')),
                ('vol_irriguo', models.FloatField(default=0, verbose_name='dose intervento irriguo')),
                ('perc_riserva_util', models.PositiveIntegerField(default=1, help_text='celle C5', verbose_name='percentuale riserva facilmente utilizzabile')),
                ('data_apporto_irriguo', models.DateField(default=django.utils.timezone.now, verbose_name='data ultimo apporto irriguo')),
                ('volume_apporto_irriguo', models.PositiveIntegerField(default=10, verbose_name="volume dell'ultimo apporto irriguo (mc)")),
                ('kc_datasheet', models.FileField(default='kc_spreadsheet/Kc_elenco.csv', upload_to='kc_spreadsheet', verbose_name='Kc csv file')),
                ('ks_datasheet', models.FileField(default='ks_spreadsheet/Kc_elenco.csv', upload_to='ks_spreadsheet', verbose_name='Ks csv file')),
                ('data_semina', models.DateField(default=django.utils.timezone.now, verbose_name='data di semina o trapianto')),
                ('durata_ciclo', models.PositiveIntegerField(default=1, verbose_name='durata ciclo colturale (giorni)')),
                ('strato_radici', models.FloatField(default=0.0, verbose_name='strato esplorato dalle radici (cm)')),
                ('note', models.TextField(blank=True, default='', null=True)),
                ('Airr_min', models.FloatField(blank=True, default=0.0, help_text='espresso in mm', null=True, verbose_name='Soglia effettivo inizio intervento irriguo Airr_min')),
                ('Airr_minFlag', models.BooleanField(default=False, verbose_name='Utilizzo valore di soglia intervento irriguo')),
                ('campi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dash_aziende.campi')),
            ],
            options={
                'verbose_name': 'Appezzamento',
                'verbose_name_plural': 'Appezzamenti',
            },
        ),
        migrations.CreateModel(
            name='bilancio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_rif', models.DateField(default=dateutil.utils.today, verbose_name='data calcolo bilancio')),
                ('pioggia_cum', models.FloatField(default=0.0, verbose_name='pioggia cumulata')),
                ('Kc', models.FloatField(default=0.0)),
                ('Et0', models.FloatField(default=0.0, verbose_name='EvapoTraspirazione metodo esteso')),
                ('Etc', models.FloatField(default=0.0)),
                ('P_ep', models.FloatField(default=0.0, verbose_name='P - Ep (mm)')),
                ('L', models.FloatField(default=0.0)),
                ('Lambda', models.FloatField(default=0.0)),
                ('a', models.FloatField(default=0.0)),
                ('Au', models.FloatField(default=0.0, verbose_name='A>U mm')),
                ('A', models.FloatField(default=0.0, help_text='colonna L', verbose_name='capacit\xe0 idrica massima')),
                ('Irrigazione', models.NullBooleanField(default=False)),
                ('dose', models.FloatField(default=0.0)),
                ('dose_antropica', models.FloatField(default=0.0, verbose_name='Dose irrigua antropica (mm)')),
                ('note', models.TextField(blank=True, default='', null=True)),
                ('Irr_mm', models.FloatField(default=0.0, verbose_name='Irrigazione in mc')),
                ('appezzamento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='consiglio.appezzamento')),
                ('appezzamentoDaCampo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='consiglio.appezzamentoCampo')),
                ('stazione', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='income.stazioni_retevista')),
            ],
            options={
                'ordering': ('-data_rif',),
                'verbose_name': 'Bilancio',
                'verbose_name_plural': 'Bilanci',
            },
        ),
        migrations.CreateModel(
            name='coltura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specie', models.TextField()),
                ('data_semina', models.DateField(verbose_name='data di semina o trapianto')),
                ('durata_ciclo', models.PositiveIntegerField(verbose_name='durata ciclo colturale (giorni)')),
                ('strato_radici', models.FloatField(verbose_name='strato esplorato dalle radici (cm)')),
                ('kc_ini', models.FloatField(default=0, verbose_name='Kc ini')),
                ('kc_med', models.FloatField(default=0, verbose_name='Kc med')),
                ('kc_end', models.FloatField(default=0, verbose_name='Kc end')),
                ('durata_kc_ini', models.FloatField(default=0, verbose_name='durata giorni kc ini')),
                ('durata_kc_dev', models.FloatField(default=1.0, verbose_name='durata giorni kc dev')),
                ('durata_kc_med', models.FloatField(default=0, verbose_name='durata giorni kc med')),
                ('durata_kc_end', models.FloatField(default=0, verbose_name='durata giorni kc end')),
                ('kc_datasheet', models.FileField(default='kc_spreadsheet/Kc_elenco.csv', upload_to='kc_spreadsheet', verbose_name='Kc csv file')),
            ],
            options={
                'verbose_name': 'Coltura',
                'verbose_name_plural': 'Colture',
            },
        ),
        migrations.CreateModel(
            name='rasterAppezzamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raster', models.FileField(help_text='caricare un raster nel SR 4326 -- lat/long wgs84', upload_to='rasterCasa', verbose_name='raster geotif')),
                ('titolo', models.CharField(help_text='inserire il titolo rappresentativo del raster', max_length=250, verbose_name='Titolo del raster')),
                ('tipologia', models.CharField(blank=True, choices=[('OM', 'Sostanza organica')], default=('OM', 'Sostanza organica'), max_length=250, null=True, verbose_name='Tipologia del raster')),
                ('appezzamento', models.ForeignKey(help_text='Campo aziendale al quale associare il raster', on_delete=django.db.models.deletion.CASCADE, to='dash_aziende.campi', verbose_name='Appezzamento aziendale')),
            ],
            options={
                'ordering': ['appezzamento'],
                'verbose_name': 'Mappa raster',
                'verbose_name_plural': 'Mappe raster',
            },
        ),
        migrations.CreateModel(
            name='settore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.FloatField(help_text='area  in metri quadri', verbose_name='area mq')),
                ('metodo', models.TextField(verbose_name='metodo irriguo')),
                ('data', models.DateField(verbose_name='data ultimo apporto irriguo')),
                ('volume', models.PositiveIntegerField(verbose_name="volume dell'ultimo apporto irriguo (mc)")),
            ],
            options={
                'verbose_name_plural': 'Settori',
            },
        ),
        migrations.AddField(
            model_name='appezzamento',
            name='coltura',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='consiglio.coltura'),
        ),
        migrations.AddField(
            model_name='appezzamento',
            name='settore',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='consiglio.settore'),
        ),
    ]
